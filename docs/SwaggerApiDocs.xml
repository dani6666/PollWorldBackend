swagger: "2.0"
info:
  version: 1.0.0
  title: PollWorldApi
host: "127.0.0.1:8000"
consumes:
  - "application/json"
produces:
  - "application/json"
paths:
  /token:
    post:
      summary: "Log in user"
      operationId: "logInUser"
      tags:
        - user
      parameters:
      - in: "body"
        name: "body"
        description: "Pet object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/UserCredentials"
      responses:
        "200":
          description: 'JWT tokens for a user'
          schema:
            $ref: '#/definitions/Jwt'
        '401':
          description: Wrong email or password
  /token/refresh:
    post:
      summary: 'Refresh access token based on refresh token'
      operationId: refreshToken
      tags:
        - user
      parameters:
      - name: refresh
        in: body
        description: refresh token
        required: true
        schema:
            type: string
      responses:
        '200':
          description: 'Access token for a user'
          schema:
            $ref: '#/definitions/JwtAccess'
        '401':
          description: Wrong refresh token
  /accounts/register:
    post:
      summary: 'Register a user'
      operationId: registerUser
      tags:
        - user
      parameters:
      - in: "body"
        name: "body"
        schema:
          $ref: '#/definitions/UserCredentials'
      responses:
        '200':
          description: 'User registered successfully'
        '400':
          description: 'Email already exists/is invalid'
  /accounts/get:
    get:
      summary: 'Gets user personal data (without password)'
      operationId: getUser
      tags:
        - user
      parameters:
      - in: "header"
        name: "Authorization"
        type: "string"
        description: "e.g. Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjA3MzMzOTAwLCJqdGkiOiJmMWRiY2EzYzRiMTU0NTg5YTA1ZGRiZTY4M2QyZDA3MyIsInVzZXJfaWQiOjF9.5qBocwFvBvF791POe8sETBECis0GCcRTWHPSNvABtXw"
      responses:
        '200':
          description: 'User retrieved successfully'
          schema:
            $ref: '#/definitions/UserPersonalData'
        '401':
          description: Wrong refresh token
  /accounts/personal_update:
    put:
      summary: 'Updates user personal data (without password)'
      operationId: updateUser
      tags:
        - user
      parameters:
      - in: "header"
        name: "Authorization"
        type: "string"
        description: "e.g. Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjA3MzMzOTAwLCJqdGkiOiJmMWRiY2EzYzRiMTU0NTg5YTA1ZGRiZTY4M2QyZDA3MyIsInVzZXJfaWQiOjF9.5qBocwFvBvF791POe8sETBECis0GCcRTWHPSNvABtXw"
      - in: "body"
        name: "body"
        schema:
          $ref: '#/definitions/UserPersonalData'
      responses:
        '200':
          description: 'User updated successfully'
        '401':
          description: Wrong refresh token
  /polls/all:
    get:
      summary: 'Returns all the polls assigned to user'
      operationId: getPolls
      tags:
        - poll
      parameters:
      - in: "header"
        name: "Authorization"
        type: "string"
        description: "e.g. Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjA3MzMzOTAwLCJqdGkiOiJmMWRiY2EzYzRiMTU0NTg5YTA1ZGRiZTY4M2QyZDA3MyIsInVzZXJfaWQiOjF9.5qBocwFvBvF791POe8sETBECis0GCcRTWHPSNvABtXw"
      responses:
        '200':
          description: 'Polls retrieved successfully'
          schema:
            $ref: '#/definitions/PollsList'
        '401':
          description: Wrong refresh token
  /polls/{pollId}:
    get:
      summary: 'Returns all the polls assigned to user'
      operationId: getPollById
      tags:
        - poll
      parameters:
      - in: path
        name: pollId
        type: integer
        required: True
      - in: "header"
        name: "Authorization"
        type: "string"
        description: "e.g. Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjA3MzMzOTAwLCJqdGkiOiJmMWRiY2EzYzRiMTU0NTg5YTA1ZGRiZTY4M2QyZDA3MyIsInVzZXJfaWQiOjF9.5qBocwFvBvF791POe8sETBECis0GCcRTWHPSNvABtXw"
      responses:
        '200':
          description: 'Poll retrieved successfully'
          schema:
            $ref: '#/definitions/Poll'
        '401':
          description: Wrong refresh token
        '403':
          description: Poll not assigned to a user
        '404':
          description: Poll not found
definitions:
  UserCredentials:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
  Jwt:
      type: object
      properties:
        refresh:
          type: string
        access:
          type: string
        user:
          type: string
        id:
          type: integer
  JwtAccess:
    type: object
    properties:
      access:
        type: string
  UserPersonalData:
    type: object
    properties:
      name:
        type: string
      age:
        type: integer
      sex:
        type: boolean
      profession:
        type: string
      placeOfResidence:
        type: integer
        enum: [1,2,3]
      growth:
        type: integer
      weight:
        type: integer
      levelOfFitness:
        type: integer
        enum: [1,2,3,4,5]
  PollsList:
    type: array
    items:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        company:
          type: string
        price:
          type: number
        category:
          type: string
        shortDescripption:
          type: string
        description:
          type: string
        time:
          type: string
        rate:
          type: number
  Poll:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      company:
        type: string
      price:
        type: number
      category:
        type: string
      shortDescripption:
        type: string
      description:
        type: string
      time:
        type: string
      rate:
        type: number
      questions:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
            type:
              type: string
            text:
              type: string
            options:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  option:
                    type: string